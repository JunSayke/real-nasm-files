section .data
	msg1: db 'INVENTORY SYSTEM',10, 'Programmer: '    
	len1: equ $-msg1
	p1: db 'Input Product 1 Quantity: '
	p1Len: equ $-p1
	p2: db 'Input Product 2 Quantity: '
	p2Len: equ $-p2
	fin: db 'Total Product Quantity: '
    finLen: equ $-fin

section .bss
    name resb 16
    num1 resb 3
    num2 resb 3
    
    a resb 3
    b resb 3
    
    sum resb 4
    

section .text
	global _start

_start:
    mov eax, 4          
	mov ebx, 1            
	mov ecx, msg1       
	mov edx, len1     
	int 80h            
	
	mov eax, 3        
	mov ebx, 0 
	mov ecx, name
	mov edx, 16
	int 80h
	
	
	mov eax, 4
	mov ebx, 1
	mov ecx, p1
	mov edx, p1Len
	int 80h
	
	mov eax, 3
	mov ebx, 0
	mov ecx, num1
	mov edx, 3
	int 80h
	
	
	mov eax, 4
	mov ebx, 1
	mov ecx, p2
	mov edx, p2Len
	int 80h
	
	mov eax, 3
	mov ebx, 0
	mov ecx, num2
	mov edx, 3
	int 80h
	
	xor eax, eax
	lea esi, [num1]
	
    mov edx, esi
	sub edx, '0'
	add eax, edx
	inc esi
	
	mov edx, esi
	cmp edx, 10
	je skip1
	imul eax, 10
	sub edx, '0'
	add eax, edx
	inc esi
	skip1:
	
	mov ecx, eax
	
	xor eax, eax
	lea esi, [num2]
	
    mov edx, esi
	sub edx, '0'
	add eax, edx
	inc esi
	
	mov edx, esi
	cmp edx, 10
	je skip2
	imul eax, 10
	sub edx, '0'
	add eax, edx
	inc esi
	skip2:
	
	mov esi, [sum + 3]
	add eax, ecx
	
	loop:
	    mov ebx, 10
	    div ebx
	   ; add edx, '0'
	    mov esi, edx
	    dec esi
	    
	    
	    cmp eax, 0
	    jne loop
	
	
	mov eax, 4
	mov ebx, 1
	mov ecx, fin
	mov edx, finLen
	int 80h
	
	mov eax, 4
	mov ebx, 1
	mov ecx, sum
	mov edx, 4
	int 80h
    
	
	mov eax, 1          
	mov ebx, 0          
	int 80h