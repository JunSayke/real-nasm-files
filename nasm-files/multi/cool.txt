
section .data-
  printl: db '----------------------------------------------', 10, '| |X|  1|  2|  3|  4|  5|  6|  7|  8|  9| 10||', 10, '----------------------------------------------', 10, '| |1|  1|  2|  3|  4|  5|  6|  7|  8|  9| 10||', 10, '----------------------------------------------', 10, '| |2|  2|  4|  6|  8| 10| 12| 14| 16| 18| 20||', 10, '----------------------------------------------', 10, '| |3|  3|  6|  9| 12| 15| 18| 21| 24| 27| 30||', 10, '----------------------------------------------', 10, '| |4|  4|  8| 12| 16| 20| 24| 28| 32| 36| 40||', 10, '----------------------------------------------', 10, '| |5|  5| 10| 15| 20| 25| 30| 35| 40| 45| 50||', 10, '----------------------------------------------', 10, '| |6|  6| 12| 18| 24| 30| 36| 42| 48| 54| 60||', 10, '----------------------------------------------', 10, '| |7|  7| 14| 21| 28| 35| 42| 49| 56| 63| 70||', 10, '----------------------------------------------', 10, '| |8|  8| 16| 24| 32| 40| 48| 56| 64| 72| 80||', 10, '----------------------------------------------', 10, '| |9|  9| 18| 27| 36| 45| 54| 63| 72| 81| 90||', 10, '---------------------------------------------', 10, '||10| 10| 20| 30| 40| 50| 60| 70| 80| 90|100||'
  printLen: equ $-printl

section .text
  global _start

_start:
  mov eax,4                         ;The system call for write(sys_write)
  mov ebx,1                         ;File descriptor 1 - standard output
  mov ecx,printl
  mov edx,printLen                  ;helloLen is a constant, so we don't need to say
                                    ;mov edx,[helloLen] to get it's actual value
  int 80h                           ;Call the kernel
  mov eax,1                         ;The system call for exit (sys_exit)
  mov ebx,0                         ;Exit with return "code" of 0 (no error)
  int 80h;